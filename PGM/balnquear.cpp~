#include<iostream>

using namespace std;

class PGM{
	private:
		/// Alto de la imagen, en px, corresponde con el número de columnas de la matriz.
		short int alto;
		/// Ancho de la imagen, en px, corresponde con el número de filas de la matriz.
		short int ancho;
		/// Matriz que representa la imagen, cada punto es un píxel.
		short int pixel[650][650];	
		void Traspuesta();
		void Swap(int columna1, int columna2);

	public:
		PGM();
		void LecturaDatos();
		void SalidaDatos();
		void Blanquear();
};

int main(){
	PGM imagen;

	imagen.LecturaDatos();
	imagen.Blanquear();
	imagen.SalidaDatos();

	return 0;
}

PGM::PGM(){
	alto = 650;
	ancho = 650;

	for (int i = 0; i < 650; i++)
		for (int j = 0; j < 650; j++)
			pixel[i][j] = 0;
}

void PGM::LecturaDatos(){
	int valor_blanco;
	string header;
	
	cin >> header;
	
	cin >> ancho;
	cin >> alto;
	
	cin >> valor_blanco;

	for ( int i = 0; i < alto; i++ )
		for ( int j = 0; j < ancho; j++)
			cin >> pixel[ i ][ j ];
}

void PGM::SalidaDatos(){
	cout << "P2" << "\n";
	cout << ancho << " " << alto << "\n";
	cout << "255" << endl;

	for(int i = 0; i < alto; i++ ){
		for(int j = 0; j < ancho; j++)
			cout << pixel[i][j] << " ";
		cout << endl;
	}
}

void PGM::Blanquear(){
	int cambio_color = 255;

	for(int i = 0; i < alto; i++)
		for(int j = 0; j < ancho; j++)
			pixel[i][j] = cambio_color;

}
